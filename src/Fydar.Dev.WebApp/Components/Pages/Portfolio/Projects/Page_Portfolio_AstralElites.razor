@layout DefaultLayout
@page "/portfolio/astralelites"

<HeadContent>
    @{
        var openGraphModel = new OpenGraphModel()
        {
            Title = "Astral Elites - Fydar",
            Description = "The physics-based and fast-paced asteroids clone for the modern era.",
            CanonicalUrl = "https://fydar.dev/portfolio/astralelites",
            Properties = [
                new OpenGraphModelImage()
                {
                    Url = "https://fydar.dev/media/astralelites/social.webp",
                    Alt = "Promotional material for the game 'Astral Elites'."
                }
            ]
        };
        var linkData = new LinkData()
        {
            new LinkDataBreadcrumbList()
            {
                new LinkDataBreadcrumbListItem()
                {
                    Name = "Portfolio",
                    Item = "https://fydar.dev/portfolio/"
                },
                new LinkDataBreadcrumbListItem()
                {
                    Name = "Astral Elites",
                    Item = "https://fydar.dev/portfolio/astralelites"
                }
            }
        };
    }
    <OpenGraphComponent Model="@openGraphModel" />
    <LinkDataComponent Model="@linkData" />
</HeadContent>

<section class="fullscreen" data-nosnippet>
    <div class="parallax-frame parallax-focalanchortop" style="--animation-time: 0.5;">

        <EmbedUnity class="embed loading parallax-layer" style="--parallax-multiplier: 0.5">
            <Configuration>
                <script>
                    var config = {
                        companyName: "Fydar",
                        productName: "Astral Elites",
                        productVersion: "astralelites",
                        dataUrl: "/play/astralelites/build/astralelites.data.br",
                        codeUrl: "/play/astralelites/build/astralelites.wasm.br",
                        frameworkUrl: "/play/astralelites/build/astralelites.framework.js.br",
                        streamingAssetsUrl: "/play/astralelites/StreamingAssets",
                        arguments: ["background"],
                    };
                    var loaderUrl = "/play/astralelites/build/astralelites.loader.js";
                </script>
            </Configuration>
            <Placeholder>
                <img src="/play/astralelites/favicon.ico" alt="The logo for 'Astral Elites'." style="width: 200px; max-width: 90%; margin-bottom: 32px;" />
            </Placeholder>
        </EmbedUnity>

    </div>

    <div class="fullscreen-footer">

        <picture>
            <img class="titlecard" src="media/astralelites/titlecard.svg?v=1" alt="Title card for the game 'Astral Elites'." />
        </picture>

        <SteamPlayButton href="/play/astralelites">Play in Browser</SteamPlayButton>

    </div>
</section>

<HeadingScope>
    <aside>
        <section style="position: sticky; top: 64px;">
            <div style="height: 5rem"></div>
            <TableOfContents />
        </section>

    </aside>

    <section class="container">

        <Heading Level="2" Identifier="autoplay">
            <Prefix>Optimizations for</Prefix>
            <Text>Autoplay in the Background</Text>
            <Media><SvgSprite Link="/icons.svg?v=1#icon-astralelites" /></Media>
            <Content>
                <p>This page of my website features the game playing by itself in the background.</p>

                <h3>Configuring the game</h3>
                <p>To allow the game to be played in the background, I needed to create an alternate game controller that would manage the auto-playing of the game. This alternate game controller should only be active when the project is launched in background mode.</p>

                <p>Allowing the project to launch in two different modes instead of creating alternate versions of the game means the website doesn't have to download two different games; which means users of my website can load the game faster.</p>

                <p>In order to tell the game that it should be a background and not a playable game, I pass a command-line argument into the game in the JavaScript that launches the game. The game then checks for this, and launches in the alternate mode.</p>

                <p>Finally, I added a basic AI player controller to play the game (albeit poorly) and the background is done!</p>

                <h3>Making it load faster</h3>
                <p>Since the game auto-playing is now apart of the project landing page, it's important that it loads as quickly as possible.</p>

                <p>Using Unity's Asset Bundles, I moved the background music for the game into a separate bundle which is only downloaded is music is required. Since the background version of the game doesn't need music, it's not download until the player pressed the button to "Play in Browser".</p>
            </Content>
        </Heading>


        <Heading Level="2" Identifier="discord-sdk">
            <Prefix>Working with the</Prefix>
            <Text>Discord SDK</Text>
            <Media><SvgSprite Link="/icons.svg?v=1#icon-discord" /></Media>
            <Content>

                <p>One of the first things that I decided to implement to further the development of this project was to implement the Discord SDK. The Discord SDK provides "rich-presence" integration that allows me to render the players current game state with their friends.</p>

                <p>I also explored the multiplayer APIs that Discord exposes, but I didn't implement them on this project due to it being a single-player game (though I was tempted to make it multiplayer purely to explore these multiplayer APIs more).</p>

            </Content>
        </Heading>

    </section>
</HeadingScope>
