@layout DefaultLayout
@page "/portfolio/outrage"

<HeadContent>
    @{
        var openGraphModel = new OpenGraphModel()
        {
            Title = "OutRage: Fight Fest - Fydar",
            Description = "A 16-player beat-em-up brawler with a sandbox of attacks, weapons, and destructible props in Battle Royale Free for All and Team-based game modes.",
            CanonicalUrl = "https://fydar.dev/portfolio/outrage",
            Properties = [
                new OpenGraphModelImage()
                {
                    Url = "https://fydar.dev/media/outrage/social.webp",
                    Alt = "Promotional material for the game 'OutRage: Fight Fest'."
                }
            ]
        };
        var linkData = new LinkData()
        {
            new LinkDataBreadcrumbList()
            {
                new LinkDataBreadcrumbListItem()
                {
                    Name = "Portfolio",
                    Item = "https://fydar.dev/portfolio/"
                },
                new LinkDataBreadcrumbListItem()
                {
                    Name = "OutRage: Fight Fest",
                    Item = "https://fydar.dev/portfolio/outrage"
                }
            }
        };
    }
    <OpenGraphComponent Model="@openGraphModel" />
    <LinkDataComponent Model="@linkData" />
</HeadContent>

<section class="fullscreen" data-nosnippet>
    <div class="parallax-frame parallax-focalanchortop" style="--animation-time: 0.5;">

        <div class="parallax-layer" style="--parallax-multiplier: 0.5;">
            <div class="blur" style="background: radial-gradient(100% 100% at 50% 50%, #302e32 25%, #1f2136 100%);">
            </div>
        </div>

        <video class="parallax-layer" onloadeddata="this.classList.add('loaded');" style="--parallax-multiplier: 0.5" autoplay muted loop>
            <source src="/media/outrage/background.1080p.60fps.h265.mp4?v=1" type='video/mp4; codecs="hvc1.1.2.L123.90"; profiles="isom,iso2,mp41"'>
            <source src="/media/outrage/background.1080p.30fps.h264.mp4?v=1" type='video/mp4; codecs="avc1.4d4028"; profiles="isom,iso2,avc1,mp41"'>
        </video>

    </div>

    <div class="fullscreen-footer">

        <picture>
            <img class="titlecard" src="media/outrage/titlecard.webp?v=1" alt="Title card for the game 'OutRage: Fight Fest'." />
        </picture>

        <SteamPlayButton href="https://store.steampowered.com/app/2307870/OutRage_Fight_Fest/">Visit on Steam</SteamPlayButton>

    </div>
</section>

<div class="cascade-container">
    <div class="cascade" style="background: linear-gradient(to right, #302e3200 0%, #302e3230 75%, #302e3214 100%), url('media/noise.svg');">
    </div>
</div>

<aside>
    <section>
        <h1>OutRage: Fight Fest</h1>
    </section>
</aside>

<section class="container">

    <EmbedYouTube Url="https://www.youtube-nocookie.com/embed/3f8x4BwqAww?si=IEuFL9_F0NObYgIH" />

</section>

<HeadingScope>
    <aside>
        <section style="position: sticky; top: 64px;" data-nosnippet>
            <div style="height: 5rem"></div>
            <TableOfContents />
        </section>

    </aside>

    <section class="container">

        <Heading Level="2" Identifier="deterministic-simulation">
            <Prefix>Programming a multiplayer</Prefix>
            <Text>Deterministic Simulation</Text>
            <Media><img src="media/outrage/quantum-logo-small.webp?v=1" alt="The logo for Photon Quantum." /></Media>
            <Content>
                <p>Fighting games require very specialised multiplayer programming in order to reduce latency, as milliseconds count when it comes to player-verses-player combat. In order to achieve the lowest latency possible, we opted to use <a href="https://www.photonengine.com/quantum" target="_blank">Photon Quantum<SvgSprite Link="/icons.svg?v=1#icon-external-link" class="external-link-icon" /></a> for our game simulation.</p>

                <p>Having the opportunity to work first-hand with <b>Photon Quantum</b>, a deterministic entity-component system, inspired me to work on my own implementation of an <b>ECS</b> that utilises the <b>latest C# language features</b>.</p>
            </Content>
        </Heading>

        <Heading Level="2" Identifier="throwing-props">
            <Prefix>Programming the</Prefix>
            <Text>Throwing Props</Text>
            <Content>
                <p>I implemented gameplay features to enhance the combat experience in the game, such as <b>picking up and throwing props</b> and <b>physics interactions with props</b>.</p>

                <figure class="figure-image">
                    <video autoplay muted loop>
                        <source src="/media/outrage/prop-throwing.1440p.60fps.h265.mp4?v=1" type='video/mp4; codecs="hvc1.1.2.L123.90"; profiles="isom,iso2,mp41"'>
                        <source src="/media/outrage/prop-throwing.1440p.30fps.h264.mp4?v=1" type='video/mp4; codecs="avc1.4d4028"; profiles="isom,iso2,avc1,mp41"'>
                    </video>
                    <figcaption>Footage of props being thrown from <i><a href="https://youtu.be/zmrdgqExkLI" target="_blank">'OutRage: Fight Fest Demo'<SvgSprite Link="/icons.svg?v=1#icon-external-link" class="external-link-icon" /></a></i> by <a href="https://www.youtube.com/@@UnstableVoltage" target="_blank">UnstableVoltage<SvgSprite Link="/icons.svg?v=1#icon-external-link" class="external-link-icon" /></a>.</figcaption>
                </figure>
            </Content>
        </Heading>

        <Heading Level="2" Identifier="animation-state-machines">
            <Prefix>Programming for</Prefix>
            <Text>Animation State Machines</Text>
            <Content>
                <p>In order to achieve precise control over the character animations we programmed our own <b>Animation State Machine</b>.</p>

                <p>Unity provides an animation state machine of it's own called the "Animator". This tool features a graph editor where the developer can configure transitions between different states. Once you start adding hundreds of transitions between states, however, it can become a nightmare to maintain.</p>

                <figure class="figure-image">
                    <picture>
                        <img src="/media/outrage/unity-animator.webp?v=1" alt="A screenshot of an example Animator inside Unity." loading="lazy" />
                    </picture>
                    <figcaption>A screenshot of an example Animator inside Unity.</figcaption>
                </figure>

                <Callout>
                    <Icon><SvgSprite Link="/icons.svg?v=1#icon-seal-check-fill" Alt="Check" /></Icon>
                    <ChildContent>By programming our own <b>Animation State Machine</b>, all our actions can have fast and precise visual feedback and reactions.</ChildContent>
                </Callout>
            </Content>
        </Heading>

    </section>
</HeadingScope>
