@layout DefaultLayout
@page "/portfolio/southfield"

<HeadContent>
    @{
        var openGraphModel = new OpenGraphModel()
        {
            Title = "Southfield - Fydar",
            Description = "Weird farming meets silly physics, combine crops with unpredictable effects, build your dream farmstead, and experiment with automation.",
            CanonicalUrl = "https://fydar.dev/portfolio/southfield",
            Properties = [
                new OpenGraphModelImage()
                {
                    Url = "https://fydar.dev/media/southfield/social.webp",
                    Alt = "Promotional material for the game 'Southfield'."
                }
            ]
        };
        var linkData = new LinkData()
        {
            new LinkDataBreadcrumbList()
            {
                new LinkDataBreadcrumbListItem()
                {
                    Name = "Portfolio",
                    Item = "https://fydar.dev/portfolio/"
                },
                new LinkDataBreadcrumbListItem()
                {
                    Name = "Southfield",
                    Item = "https://fydar.dev/portfolio/southfield"
                }
            }
        };
    }
    <OpenGraphComponent Model="@openGraphModel" />
    <LinkDataComponent Model="@linkData" />
</HeadContent>

<section class="fullscreen" data-nosnippet>
    <div class="parallax-frame parallax-focalanchortop" style="--animation-time: 0.5;">

        <div class="parallax-layer" style="--parallax-multiplier: 0.5;">
            <div class="blur" style="background: linear-gradient(#679DFB, #A8D5FD, #8EBF6C, #7AA355)">
            </div>
        </div>

        <video class="parallax-layer" onloadeddata="this.classList.add('loaded');" style="--parallax-multiplier: 0.5" autoplay muted loop>
            <source src="/media/southfield/background.1440p.60fps.h265.mp4?v=1" type='video/mp4; codecs="hvc1.1.2.L150.90"; profiles="isom,iso2,mp41"'>
            <source src="/media/southfield/background.1440p.30fps.h264.mp4?v=1" type='video/mp4; codecs="avc1.4d4029"; profiles="isom,iso2,avc1,mp41"'>
        </video>

    </div>

    <div class="fullscreen-footer">

        <picture>
            <img class="titlecard" src="media/southfield/titlecard.svg?v=1" alt="Title card for the game 'Southfield'." />
        </picture>

        <SteamPlayButton href="https://store.steampowered.com/app/2076210/Southfield/">Wishlist on Steam</SteamPlayButton>

    </div>
</section>

<div class="cascade-container">
    <div class="cascade" style="background: linear-gradient(to right, #91bf6300 0%, #91bf6330 75%, #91bf6314 100%), url('media/noise.svg');">
    </div>
</div>

<aside>
    <section>
        <h1>Southfield</h1>
    </section>
</aside>

<section class="container">

    <EmbedYouTube Url="https://www.youtube-nocookie.com/embed/2NkfRH4AWa8?si=HRpJ95ddnvms37rC" />

</section>

<HeadingScope>
    <aside>
        <section style="position: sticky; top: 64px;">
            <div style="height: 5rem"></div>
            <TableOfContents />
        </section>

    </aside>

    <section class="container">

        <!--
            <p>Weird farming meets silly physics, combine crops with unpredictable effects, build your dream farmstead, and experiment with automation.</p>

            <p>I made many tools to empower artists by automating parts of their previous workflows; chief amongst which were tools for the automation of <b>screenshot capture</b> for <b>icon generation</b>, <b>gradient recolouring</b>, <b>texture atlasing</b>, <b>level design tools for terrains</b>, <b>texture generation</b>, and <b>procedural generation</b>.</p>
            -->

        <Heading Level="2" Identifier="gradient-recolouring">
            <Prefix>Tooling for</Prefix>
            <Text>Gradient Recolouring</Text>
            <Media><SvgSprite Link="/icons.svg?v=1#icon-radient" /></Media>
            <Content>
                <p>Radient is a <b>gradient editor</b> I created for Unity. I created it to release as an asset on the <a href="https://assetstore.unity.com/publishers/13236" target="_blank">Unity Asset Store<SvgSprite Link="/icons.svg?v=1#icon-external-link" class="external-link-icon" /></a> after watching the <a href="https://youtu.be/YZWKdw03Gls?t=853" target="_blank">Unite Europe 2017 talk detailing the VFX behind the game 'Spellsouls'<SvgSprite Link="/icons.svg?v=1#icon-external-link" class="external-link-icon" /></a>.</p>

                <p>I created an updated version of Radient for <b>Southfield</b> that used vertical gradients (instead of the horizontal ones I was previously using) which inspired me to take up the project under the name <b>Procedural Assets</b> in my spare time - and good thing I did, because it turns out that the version I created for <b>Radical Forge</b> started having rare errors in the build.</p>

                <figure class="figure-image">
                    <video controls muted loop>
                        <source src="/media/radient/model-demo.mp4?v=1" type='video/mp4'>
                    </video>
                    <figcaption>Demonstration of the procedural gradient atlas tool.</figcaption>
                </figure>

                <p>This was an incredible opportunity for me to explore new technologies for creating procedurally generated assets for a Unity project.</p>

                <Callout>
                    <Icon><SvgSprite Link="/icons.svg?v=1#icon-seal-check-fill" Alt="Check" /></Icon>
                    <ChildContent>My tooling simplified the management of hundreds of colour palettes into an <b>asset-based workflow</b>.</ChildContent>
                </Callout>

                <Callout>
                    <Icon><SvgSprite Link="/icons.svg?v=1#icon-seal-check-fill" Alt="Check" /></Icon>
                    <ChildContent>My tooling enabled artists to be able to freely adjust gradients <b>within the editor</b>.</ChildContent>
                </Callout>

                <p>Something that the original version of Radient had (and which unfortunately didn't get implemented in Southfield) was alternate blend spaces to improve colour interpolation.</p>

                <picture class="media">
                    <img src="/media/radient/gradient-editor.png?v=1" alt="The gradient editor for Radient featuring a gradient blending in the CIEXYZ colour space." loading="lazy" />
                </picture>
            </Content>
        </Heading>

        <Heading Level="2" Identifier="icon-generation">
            <Prefix>Tooling for</Prefix>
            <Text>Icon Generation</Text>
            <Media><SvgSprite Link="/icons.svg?v=1#icon-holodrone" /></Media>
            <Content>
                <p>I created a tool called <b>Holodrone</b> to automate the process of generating icons. I originally created this tool for a personal project, so when I ported the tool to <b>Southfield</b> I added <b>HDRP</b> support.</p>

                <p>To better support the <b>Southfield</b> art style, I created a custom post-processing stack along with a signed-distance field algorithm to add outlines and shadows to the generated icons. This was generated on the <b>GPU</b> using a shader.</p>

                <figure class="figure-image">
                    <video controls muted loop>
                        <source src="/media/holodrone/gun-demonstration.mp4?v=1" type='video/mp4'>
                    </video>
                    <figcaption>Demonstration of the non-destructive icon generation workflow with Holodrone.</figcaption>
                </figure>

                <Callout>
                    <Icon><SvgSprite Link="/icons.svg?v=1#icon-seal-check-fill" Alt="Check" /></Icon>
                    <ChildContent>My tooling preserved the environment used to render the icons so adjustments can be made in the future.</ChildContent>
                </Callout>

                <Callout>
                    <Icon><SvgSprite Link="/icons.svg?v=1#icon-seal-check-fill" Alt="Check" /></Icon>
                    <ChildContent>My tooling allowed icons to be updated in bulk (for example, adding a shadow to all icons).</ChildContent>
                </Callout>
            </Content>
        </Heading>

        <Heading Level="2" Identifier="texture-atlasing">
            <Prefix>Tooling for</Prefix>
            <Text>Texture Atlasing</Text>
            <Content>
                <p>To create the texture atlasing tool, I took the rewritten gradient palette tool and turned it up to 100. Instead of generating simple gradients using pixel manipulation, I needed to use shaders and GPU rendering to draw multiple textures onto a texture atlas.</p>

                <p>In the future, I would like to rewrite Packbook. It would be good if I could make the the system flexible enough to be able to combine the texture atlasing tool with the gradient palette tool so that I can pack them together using the same mechanisms.</p>

                <figure class="figure-image">
                    <picture class="media-wide">
                        <img src="/media/southfield/packbook-textures.png?v=1" alt="Texture atlases containing textures for the crops in the game." loading="lazy" />
                    </picture>
                    <figcaption>The crops of Southfield have their textures packed into these custom atlases in-engine.</figcaption>
                </figure>

                <Callout>
                    <Icon><SvgSprite Link="/icons.svg?v=1#icon-seal-check-fill" Alt="Check" /></Icon>
                    <ChildContent>My tooling <b>completely automated</b> the creation and maintainence of texture atlases.</ChildContent>
                </Callout>
            </Content>
        </Heading>

        <Heading Level="2" Identifier="level-design-and-procedural-generation">
            <Prefix>Tooling for</Prefix>
            <Text>Level Design</Text>
            <Content>
                <p>Something that I unfortunately can't show without permission is my Level Brush and Cluster Designer tools. These are tools that allows a Level Designer to create "cluster designs" (which act as rulesets to generating random clusters of props) and to place them directly into the scene.</p>

                <p>The world of <b>Southfield</b> is vast, often requiring many individual props (pebbles, rocks, bushes, flowers, e.t.c) to be placed into the scene.</p>

                <figure class="figure-image">
                    <picture class="media-wide">
                        <img src="/media/southfield/screenshot-exploration.jpg?v=1" alt="The player character exploring the world with a companion." loading="lazy" />
                    </picture>
                    <figcaption>The world of Southfield as seen in the game trailer authored using my tools.</figcaption>
                </figure>

                <Callout>
                    <Icon><SvgSprite Link="/icons.svg?v=1#icon-seal-check-fill" Alt="Check" /></Icon>
                    <ChildContent>My tooling allowed our Level Designers to quickly create to <b>quickly populate</b> the forests and other biomes.</ChildContent>
                </Callout>

                <Callout>
                    <Icon><SvgSprite Link="/icons.svg?v=1#icon-seal-check-fill" Alt="Check" /></Icon>
                    <ChildContent>My tooling was adapted from a design-time generator to a runtime generator to allow for <b>procedural world generation</b>.</ChildContent>
                </Callout>
            </Content>
        </Heading>

        <Heading Level="2" Identifier="cinematic-camera">
            <Prefix>Tooling for a</Prefix>
            <Text>Cinematic Camera</Text>
            <Content>
                <p>Much of the game trailer was recorded using my <b>cinematic camera controller</b>.</p>

                <p>I created a camera controller designed with <b>cinematic locomotion</b> in mind. This meant adding spring systems so that subtle movement can be added to complement the camera movements.</p>

                <Callout>
                    <Icon><SvgSprite Link="/icons.svg?v=1#icon-seal-check-fill" Alt="Check" /></Icon>
                    <ChildContent>My tooling enabled our content specialists to <b>capture gameplay footage</b> from different angles.</ChildContent>
                </Callout>

                <Callout>
                    <Icon><SvgSprite Link="/icons.svg?v=1#icon-seal-check-fill" Alt="Check" /></Icon>
                    <ChildContent>My tooling was exposed to players so that they can also use the <b>tool to generate content</b>.</ChildContent>
                </Callout>
            </Content>
        </Heading>

    </section>
</HeadingScope>
