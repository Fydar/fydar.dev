@layout DefaultLayout
@page "/portfolio/inventory"

<HeadContent>
    @{
        var openGraphModel = new OpenGraphModel()
        {
            Title = "Fydar.Inventory - Fydar",
            Description = "A complete inventory system.",
            CanonicalUrl = "https://fydar.dev/portfolio/inventory",
            Properties = [
                new OpenGraphModelImage()
                {
                    Url = "https://fydar.dev/media/header.webp",
                    Alt = "A portrait of Fydar in an anime art style."
                }
            ]
        };
    }
    <OpenGraphComponent Model="@openGraphModel" />
</HeadContent>

<section class="fullscreen">
    <div class="parallax-frame parallax-focalanchortop" style="--animation-time: 0.5;">

        <video class="parallax-layer" style="--parallax-multiplier: 0.5" autoplay muted loop>
            <source src="/media/cryptcrawl/background.mp4?v=1" type="video/mp4">
        </video>

    </div>

    <div class="fullscreen-footer">

        <picture>
            <img class="titlecard" src="media/cryptcrawl/titlecard.svg?v=1" alt="Title card for the game 'Crypt Crawl'." />
        </picture>

    </div>
</section>

<aside>

</aside>

<section class="container">

    <h1>Crypt Crawl</h1>

    <p>For myself, the really exciting part of the development of Crypt Crawl was the idea of procedural tilesets. This meant that I could generate unique tilesets for every dungeon in real-time.</p>

    <p>Procedural tilesets were accomplished using Substance Designer. At the time I was very new and I ended up creating an awful, brown tileset. The pixel-art technique that I used later informed art pipeline of <a href="/portfolio/the-dwellers">The Dwellers</a>.</p>

    <figure class="figure-image">
        <img src="/img/crypt-crawl-gameplay.png?v=1" loading="lazy" />
        <figcaption>Gameplay screenshot.</figcaption>
    </figure>

</section>
